"""
Copyright (c) 2021 Philipp Scheer
"""


class IEntity():
    def __init__(self) -> None:
        self.data = {}

    def _set_slot_data(self, slot_data: dict):
        self.data = slot_data

    def resolve(self):
        """Resolve an entity value to be computer readable  
        Usage:
        ```python
        from jarvis_sdk import Entity, IEntity

        class datetime(IEntity):
            def __init__(self) -> None:
                super().__init__()

            def resolve(self):
                # A new `self.data` dict is now available with these values:
                # {
                #     "range": {
                #         "start": 7,
                #         "end": 17
                #     },
                #     "rawValue": "in 2 days",
                #     "value": {
                #         "kind": "Custom",
                #         "value": "in 2 days"
                #     },
                #     "entity": "datetime",
                #     "slotName": "time"
                # }
                # Your job is to convert this input into something machine readable like a timestamp
                string = self.data.get("value", {}).get("value", "").lower()
                return time.time()
        
        Entity.register(datetime)
        # Don't forget to register your entity.
        # Intent handlers (via @Intent.on()) are now able to access your entity and resolve text values
        ```
        """
        pass


class Entity():
    """Register entities to process information generated by Jarvis NLU"""

    def __init__(self) -> None:
        pass

    _entities = {}

    @staticmethod
    def register(entity_class: IEntity):
        """Register your entity class  
        Usage:
        ```python
        from jarvis_sdk import Entity, IEntity

        class test(IEntity):
            def __init__(self) -> None:
                super().__init__()

            def resolve(self):
                return "something useful"
        
        Entity.register(test)
        ```"""
        Entity._entities[entity_class.__name__] = entity_class
